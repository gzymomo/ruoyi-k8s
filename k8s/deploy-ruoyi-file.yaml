apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ruoyi-file
  name: ruoyi-file
  namespace: ruoyi-k8s   #一定要写名称空间
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: ruoyi-file
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ruoyi-file
    spec:
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
      containers:
        - image: harbor.bk.rfios.com/ruoyi-k8s/ruoyi-modules-file:latest
          #         readinessProbe:
          #           httpGet:
          #             path: /actuator/health
          #             port: 8080
          #           timeoutSeconds: 10
          #           failureThreshold: 30
          #           periodSeconds: 5
          imagePullPolicy: IfNotPresent
          name: app
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: SPRING_PROFILES_ACTIVE
              value: "dev"
          resources:
            limits: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccountName: ruoyi-admin
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ruoyi-file
  name: ruoyi-file
  namespace: ruoyi-k8s
  annotations:
    prometheus.io/port: "80" #端口配自己服务的端口
    prometheus.io/spring: "true"
    prometheus.io/path: "actuator/prometheus"
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: ruoyi-file
  sessionAffinity: None
  type: ClusterIP
---


apiVersion: v1
kind: ConfigMap
metadata:
  name: ruoyi-file
  namespace: ruoyi-k8s
  labels:
    spring.cloud.kubernetes.config: "true"
data:
  application.yml: |-
    # 本地文件上传
    file:
      domain: http://127.0.0.1:80
      path: /data/
      prefix: /statics
    
    # FastDFS配置
    fdfs:
      domain: http://8.129.231.12
      soTimeout: 3000
      connectTimeout: 2000
      trackerList: 8.129.231.12:22122
    
    # Minio配置
    minio:
      url: http://8.129.231.12:9000
      accessKey: minioadmin
      secretKey: minioadmin
      bucketName: test

    management:
      endpoints:
        web:
          exposure:
            include: "*"
      endpoint:
        restart:
          enabled: true
      metrics:
        tags:
          application: ${spring.application.name}